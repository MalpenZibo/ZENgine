name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: actions-rs/toolchain@v1
        name: Setup toolchain
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
        name: Install rustfmt
      - uses: actions-rs/cargo@v1
        name: Check format
        with:
          command: fmt
          args: --all -- --check

  check:
    name: Check ${{ matrix.name }}
    needs: fmt
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: Windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            clippy: true
          - name: MacOS
            os: macos-latest
            target: aarch64-apple-darwin
            clippy: false
          - name: Linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            clippy: false
          - name: Web
            os: windows-latest
            target: wasm32-unknown-unknown
            clippy: true
          # - name: Android
          #   os: ubuntu-latest
          #   target: aarch64-linux-android
          #   clippy: true
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: actions-rs/toolchain@v1
        name: Setup toolchain
        with:
          target: ${{ matrix.target }}
          profile: default
          toolchain: stable
          override: true
      - uses: nttld/setup-ndk@v1
        if: matrix.name == 'Android'
        with:
          ndk-version: r25b
      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        if: matrix.name == 'Linux' || matrix.name == 'Android'
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true
      - name: Install dependencies
        if: matrix.name == 'Linux' || matrix.name == 'Android'
        run: |
          sudo apt-get update -y -qq
          sudo apt install -y libasound2-dev libudev-dev
      - uses: actions-rs/cargo@v1
        name: Clippy
        if: matrix.clippy
        with:
          command: clippy
          args: -- -D warnings
      - uses: actions-rs/cargo@v1
        name: Check
        if: matrix.name != 'Android'
        with:
          command: check
      - uses: actions-rs/cargo@v1
        if: matrix.name != 'Android'
        name: Test
        with:
          command: test
          args: --all
