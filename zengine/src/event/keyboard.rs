use serde::Deserialize;

#[derive(Copy, Clone, Eq, PartialEq, Hash, Debug, Deserialize)]
#[repr(i32)]
pub enum Key {
    Backspace = sdl2::keyboard::Keycode::Backspace as i32,
    Tab = sdl2::keyboard::Keycode::Tab as i32,
    Return = sdl2::keyboard::Keycode::Return as i32,
    Escape = sdl2::keyboard::Keycode::Escape as i32,
    Space = sdl2::keyboard::Keycode::Space as i32,
    Exclaim = sdl2::keyboard::Keycode::Exclaim as i32,
    Quotedbl = sdl2::keyboard::Keycode::Quotedbl as i32,
    Hash = sdl2::keyboard::Keycode::Hash as i32,
    Dollar = sdl2::keyboard::Keycode::Dollar as i32,
    Percent = sdl2::keyboard::Keycode::Percent as i32,
    Ampersand = sdl2::keyboard::Keycode::Ampersand as i32,
    Quote = sdl2::keyboard::Keycode::Quote as i32,
    LeftParen = sdl2::keyboard::Keycode::LeftParen as i32,
    RightParen = sdl2::keyboard::Keycode::RightParen as i32,
    Asterisk = sdl2::keyboard::Keycode::Asterisk as i32,
    Plus = sdl2::keyboard::Keycode::Plus as i32,
    Comma = sdl2::keyboard::Keycode::Comma as i32,
    Minus = sdl2::keyboard::Keycode::Minus as i32,
    Period = sdl2::keyboard::Keycode::Period as i32,
    Slash = sdl2::keyboard::Keycode::Slash as i32,
    Num0 = sdl2::keyboard::Keycode::Num0 as i32,
    Num1 = sdl2::keyboard::Keycode::Num1 as i32,
    Num2 = sdl2::keyboard::Keycode::Num2 as i32,
    Num3 = sdl2::keyboard::Keycode::Num3 as i32,
    Num4 = sdl2::keyboard::Keycode::Num4 as i32,
    Num5 = sdl2::keyboard::Keycode::Num5 as i32,
    Num6 = sdl2::keyboard::Keycode::Num6 as i32,
    Num7 = sdl2::keyboard::Keycode::Num7 as i32,
    Num8 = sdl2::keyboard::Keycode::Num8 as i32,
    Num9 = sdl2::keyboard::Keycode::Num9 as i32,
    Colon = sdl2::keyboard::Keycode::Colon as i32,
    Semicolon = sdl2::keyboard::Keycode::Semicolon as i32,
    Less = sdl2::keyboard::Keycode::Less as i32,
    Equals = sdl2::keyboard::Keycode::Equals as i32,
    Greater = sdl2::keyboard::Keycode::Greater as i32,
    Question = sdl2::keyboard::Keycode::Question as i32,
    At = sdl2::keyboard::Keycode::At as i32,
    LeftBracket = sdl2::keyboard::Keycode::LeftBracket as i32,
    Backslash = sdl2::keyboard::Keycode::Backslash as i32,
    RightBracket = sdl2::keyboard::Keycode::RightBracket as i32,
    Caret = sdl2::keyboard::Keycode::Caret as i32,
    Underscore = sdl2::keyboard::Keycode::Underscore as i32,
    Backquote = sdl2::keyboard::Keycode::Backquote as i32,
    A = sdl2::keyboard::Keycode::A as i32,
    B = sdl2::keyboard::Keycode::B as i32,
    C = sdl2::keyboard::Keycode::C as i32,
    D = sdl2::keyboard::Keycode::D as i32,
    E = sdl2::keyboard::Keycode::E as i32,
    F = sdl2::keyboard::Keycode::F as i32,
    G = sdl2::keyboard::Keycode::G as i32,
    H = sdl2::keyboard::Keycode::H as i32,
    I = sdl2::keyboard::Keycode::I as i32,
    J = sdl2::keyboard::Keycode::J as i32,
    K = sdl2::keyboard::Keycode::K as i32,
    L = sdl2::keyboard::Keycode::L as i32,
    M = sdl2::keyboard::Keycode::M as i32,
    N = sdl2::keyboard::Keycode::N as i32,
    O = sdl2::keyboard::Keycode::O as i32,
    P = sdl2::keyboard::Keycode::P as i32,
    Q = sdl2::keyboard::Keycode::Q as i32,
    R = sdl2::keyboard::Keycode::R as i32,
    S = sdl2::keyboard::Keycode::S as i32,
    T = sdl2::keyboard::Keycode::T as i32,
    U = sdl2::keyboard::Keycode::U as i32,
    V = sdl2::keyboard::Keycode::V as i32,
    W = sdl2::keyboard::Keycode::W as i32,
    X = sdl2::keyboard::Keycode::X as i32,
    Y = sdl2::keyboard::Keycode::Y as i32,
    Z = sdl2::keyboard::Keycode::Z as i32,
    Delete = sdl2::keyboard::Keycode::Delete as i32,
    CapsLock = sdl2::keyboard::Keycode::CapsLock as i32,
    F1 = sdl2::keyboard::Keycode::F1 as i32,
    F2 = sdl2::keyboard::Keycode::F2 as i32,
    F3 = sdl2::keyboard::Keycode::F3 as i32,
    F4 = sdl2::keyboard::Keycode::F4 as i32,
    F5 = sdl2::keyboard::Keycode::F5 as i32,
    F6 = sdl2::keyboard::Keycode::F6 as i32,
    F7 = sdl2::keyboard::Keycode::F7 as i32,
    F8 = sdl2::keyboard::Keycode::F8 as i32,
    F9 = sdl2::keyboard::Keycode::F9 as i32,
    F10 = sdl2::keyboard::Keycode::F10 as i32,
    F11 = sdl2::keyboard::Keycode::F11 as i32,
    F12 = sdl2::keyboard::Keycode::F12 as i32,
    PrintScreen = sdl2::keyboard::Keycode::PrintScreen as i32,
    ScrollLock = sdl2::keyboard::Keycode::ScrollLock as i32,
    Pause = sdl2::keyboard::Keycode::Pause as i32,
    Insert = sdl2::keyboard::Keycode::Insert as i32,
    Home = sdl2::keyboard::Keycode::Home as i32,
    PageUp = sdl2::keyboard::Keycode::PageUp as i32,
    End = sdl2::keyboard::Keycode::End as i32,
    PageDown = sdl2::keyboard::Keycode::PageDown as i32,
    Right = sdl2::keyboard::Keycode::Right as i32,
    Left = sdl2::keyboard::Keycode::Left as i32,
    Down = sdl2::keyboard::Keycode::Down as i32,
    Up = sdl2::keyboard::Keycode::Up as i32,
    NumLockClear = sdl2::keyboard::Keycode::NumLockClear as i32,
    KpDivide = sdl2::keyboard::Keycode::KpDivide as i32,
    KpMultiply = sdl2::keyboard::Keycode::KpMultiply as i32,
    KpMinus = sdl2::keyboard::Keycode::KpMinus as i32,
    KpPlus = sdl2::keyboard::Keycode::KpPlus as i32,
    KpEnter = sdl2::keyboard::Keycode::KpEnter as i32,
    Kp1 = sdl2::keyboard::Keycode::Kp1 as i32,
    Kp2 = sdl2::keyboard::Keycode::Kp2 as i32,
    Kp3 = sdl2::keyboard::Keycode::Kp3 as i32,
    Kp4 = sdl2::keyboard::Keycode::Kp4 as i32,
    Kp5 = sdl2::keyboard::Keycode::Kp5 as i32,
    Kp6 = sdl2::keyboard::Keycode::Kp6 as i32,
    Kp7 = sdl2::keyboard::Keycode::Kp7 as i32,
    Kp8 = sdl2::keyboard::Keycode::Kp8 as i32,
    Kp9 = sdl2::keyboard::Keycode::Kp9 as i32,
    Kp0 = sdl2::keyboard::Keycode::Kp0 as i32,
    KpPeriod = sdl2::keyboard::Keycode::KpPeriod as i32,
    Application = sdl2::keyboard::Keycode::Application as i32,
    Power = sdl2::keyboard::Keycode::Power as i32,
    KpEquals = sdl2::keyboard::Keycode::KpEquals as i32,
    F13 = sdl2::keyboard::Keycode::F13 as i32,
    F14 = sdl2::keyboard::Keycode::F14 as i32,
    F15 = sdl2::keyboard::Keycode::F15 as i32,
    F16 = sdl2::keyboard::Keycode::F16 as i32,
    F17 = sdl2::keyboard::Keycode::F17 as i32,
    F18 = sdl2::keyboard::Keycode::F18 as i32,
    F19 = sdl2::keyboard::Keycode::F19 as i32,
    F20 = sdl2::keyboard::Keycode::F20 as i32,
    F21 = sdl2::keyboard::Keycode::F21 as i32,
    F22 = sdl2::keyboard::Keycode::F22 as i32,
    F23 = sdl2::keyboard::Keycode::F23 as i32,
    F24 = sdl2::keyboard::Keycode::F24 as i32,
    Execute = sdl2::keyboard::Keycode::Execute as i32,
    Help = sdl2::keyboard::Keycode::Help as i32,
    Menu = sdl2::keyboard::Keycode::Menu as i32,
    Select = sdl2::keyboard::Keycode::Select as i32,
    Stop = sdl2::keyboard::Keycode::Stop as i32,
    Again = sdl2::keyboard::Keycode::Again as i32,
    Undo = sdl2::keyboard::Keycode::Undo as i32,
    Cut = sdl2::keyboard::Keycode::Cut as i32,
    Copy = sdl2::keyboard::Keycode::Copy as i32,
    Paste = sdl2::keyboard::Keycode::Paste as i32,
    Find = sdl2::keyboard::Keycode::Find as i32,
    Mute = sdl2::keyboard::Keycode::Mute as i32,
    VolumeUp = sdl2::keyboard::Keycode::VolumeUp as i32,
    VolumeDown = sdl2::keyboard::Keycode::VolumeDown as i32,
    KpComma = sdl2::keyboard::Keycode::KpComma as i32,
    KpEqualsAS400 = sdl2::keyboard::Keycode::KpEqualsAS400 as i32,
    AltErase = sdl2::keyboard::Keycode::AltErase as i32,
    Sysreq = sdl2::keyboard::Keycode::Sysreq as i32,
    Cancel = sdl2::keyboard::Keycode::Cancel as i32,
    Clear = sdl2::keyboard::Keycode::Clear as i32,
    Prior = sdl2::keyboard::Keycode::Prior as i32,
    Return2 = sdl2::keyboard::Keycode::Return2 as i32,
    Separator = sdl2::keyboard::Keycode::Separator as i32,
    Out = sdl2::keyboard::Keycode::Out as i32,
    Oper = sdl2::keyboard::Keycode::Oper as i32,
    ClearAgain = sdl2::keyboard::Keycode::ClearAgain as i32,
    CrSel = sdl2::keyboard::Keycode::CrSel as i32,
    ExSel = sdl2::keyboard::Keycode::ExSel as i32,
    Kp00 = sdl2::keyboard::Keycode::Kp00 as i32,
    Kp000 = sdl2::keyboard::Keycode::Kp000 as i32,
    ThousandsSeparator = sdl2::keyboard::Keycode::ThousandsSeparator as i32,
    DecimalSeparator = sdl2::keyboard::Keycode::DecimalSeparator as i32,
    CurrencyUnit = sdl2::keyboard::Keycode::CurrencyUnit as i32,
    CurrencySubUnit = sdl2::keyboard::Keycode::CurrencySubUnit as i32,
    KpLeftParen = sdl2::keyboard::Keycode::KpLeftParen as i32,
    KpRightParen = sdl2::keyboard::Keycode::KpRightParen as i32,
    KpLeftBrace = sdl2::keyboard::Keycode::KpLeftBrace as i32,
    KpRightBrace = sdl2::keyboard::Keycode::KpRightBrace as i32,
    KpTab = sdl2::keyboard::Keycode::KpTab as i32,
    KpBackspace = sdl2::keyboard::Keycode::KpBackspace as i32,
    KpA = sdl2::keyboard::Keycode::KpA as i32,
    KpB = sdl2::keyboard::Keycode::KpB as i32,
    KpC = sdl2::keyboard::Keycode::KpC as i32,
    KpD = sdl2::keyboard::Keycode::KpD as i32,
    KpE = sdl2::keyboard::Keycode::KpE as i32,
    KpF = sdl2::keyboard::Keycode::KpF as i32,
    KpXor = sdl2::keyboard::Keycode::KpXor as i32,
    KpPower = sdl2::keyboard::Keycode::KpPower as i32,
    KpPercent = sdl2::keyboard::Keycode::KpPercent as i32,
    KpLess = sdl2::keyboard::Keycode::KpLess as i32,
    KpGreater = sdl2::keyboard::Keycode::KpGreater as i32,
    KpAmpersand = sdl2::keyboard::Keycode::KpAmpersand as i32,
    KpDblAmpersand = sdl2::keyboard::Keycode::KpDblAmpersand as i32,
    KpVerticalBar = sdl2::keyboard::Keycode::KpVerticalBar as i32,
    KpDblVerticalBar = sdl2::keyboard::Keycode::KpDblVerticalBar as i32,
    KpColon = sdl2::keyboard::Keycode::KpColon as i32,
    KpHash = sdl2::keyboard::Keycode::KpHash as i32,
    KpSpace = sdl2::keyboard::Keycode::KpSpace as i32,
    KpAt = sdl2::keyboard::Keycode::KpAt as i32,
    KpExclam = sdl2::keyboard::Keycode::KpExclam as i32,
    KpMemStore = sdl2::keyboard::Keycode::KpMemStore as i32,
    KpMemRecall = sdl2::keyboard::Keycode::KpMemRecall as i32,
    KpMemClear = sdl2::keyboard::Keycode::KpMemClear as i32,
    KpMemAdd = sdl2::keyboard::Keycode::KpMemAdd as i32,
    KpMemSubtract = sdl2::keyboard::Keycode::KpMemSubtract as i32,
    KpMemMultiply = sdl2::keyboard::Keycode::KpMemMultiply as i32,
    KpMemDivide = sdl2::keyboard::Keycode::KpMemDivide as i32,
    KpPlusMinus = sdl2::keyboard::Keycode::KpPlusMinus as i32,
    KpClear = sdl2::keyboard::Keycode::KpClear as i32,
    KpClearEntry = sdl2::keyboard::Keycode::KpClearEntry as i32,
    KpBinary = sdl2::keyboard::Keycode::KpBinary as i32,
    KpOctal = sdl2::keyboard::Keycode::KpOctal as i32,
    KpDecimal = sdl2::keyboard::Keycode::KpDecimal as i32,
    KpHexadecimal = sdl2::keyboard::Keycode::KpHexadecimal as i32,
    LCtrl = sdl2::keyboard::Keycode::LCtrl as i32,
    LShift = sdl2::keyboard::Keycode::LShift as i32,
    LAlt = sdl2::keyboard::Keycode::LAlt as i32,
    LGui = sdl2::keyboard::Keycode::LGui as i32,
    RCtrl = sdl2::keyboard::Keycode::RCtrl as i32,
    RShift = sdl2::keyboard::Keycode::RShift as i32,
    RAlt = sdl2::keyboard::Keycode::RAlt as i32,
    RGui = sdl2::keyboard::Keycode::RGui as i32,
    Mode = sdl2::keyboard::Keycode::Mode as i32,
    AudioNext = sdl2::keyboard::Keycode::AudioNext as i32,
    AudioPrev = sdl2::keyboard::Keycode::AudioPrev as i32,
    AudioStop = sdl2::keyboard::Keycode::AudioStop as i32,
    AudioPlay = sdl2::keyboard::Keycode::AudioPlay as i32,
    AudioMute = sdl2::keyboard::Keycode::AudioMute as i32,
    MediaSelect = sdl2::keyboard::Keycode::MediaSelect as i32,
    Www = sdl2::keyboard::Keycode::Www as i32,
    Mail = sdl2::keyboard::Keycode::Mail as i32,
    Calculator = sdl2::keyboard::Keycode::Calculator as i32,
    Computer = sdl2::keyboard::Keycode::Computer as i32,
    AcSearch = sdl2::keyboard::Keycode::AcSearch as i32,
    AcHome = sdl2::keyboard::Keycode::AcHome as i32,
    AcBack = sdl2::keyboard::Keycode::AcBack as i32,
    AcForward = sdl2::keyboard::Keycode::AcForward as i32,
    AcStop = sdl2::keyboard::Keycode::AcStop as i32,
    AcRefresh = sdl2::keyboard::Keycode::AcRefresh as i32,
    AcBookmarks = sdl2::keyboard::Keycode::AcBookmarks as i32,
    BrightnessDown = sdl2::keyboard::Keycode::BrightnessDown as i32,
    BrightnessUp = sdl2::keyboard::Keycode::BrightnessUp as i32,
    DisplaySwitch = sdl2::keyboard::Keycode::DisplaySwitch as i32,
    KbdIllumToggle = sdl2::keyboard::Keycode::KbdIllumToggle as i32,
    KbdIllumDown = sdl2::keyboard::Keycode::KbdIllumDown as i32,
    KbdIllumUp = sdl2::keyboard::Keycode::KbdIllumUp as i32,
    Eject = sdl2::keyboard::Keycode::Eject as i32,
    Sleep = sdl2::keyboard::Keycode::Sleep as i32,
}

impl Key {
    pub fn from_sdl2_key(key: &sdl2::keyboard::Keycode) -> Key {
        match unsafe { std::mem::transmute(*key as i32) } {
            Some(key) => key,
            None => panic!("Cannot convert number {} to `Key`", *(key) as i32),
        }
    }
}

impl std::cmp::PartialEq<sdl2::keyboard::Keycode> for Key {
    fn eq(&self, other: &sdl2::keyboard::Keycode) -> bool {
        (*self) as i32 == (*other as i32)
    }
}
